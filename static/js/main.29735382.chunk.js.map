{"version":3,"sources":["components/Header.jsx","Utils/fetchApi.js","components/Todos.jsx","components/Main.jsx","components/Footer.jsx","App.jsx","index.jsx"],"names":["Header","className","fetchData","url","fetch","then","response","json","data","catch","error","console","log","Todos","users","todosList","newTodo","triggerArray","setNewTodo","addNewTodo","toggleTodo","deleteTodo","mutateTriggerArray","map","user","onClick","id","username","email","style","display","includes","name","phone","website","company","address","street","suite","city","zipcode","geo","lat","lng","type","placeholder","onChange","e","target","value","filter","todo","userId","completed","length","defaultChecked","xmlns","width","height","fill","viewBox","d","fillRule","paddingLeft","textDecoration","color","htmlFor","title","Main","useState","setUsers","setTodosList","setTriggerArray","useEffect","fetchAPi","todosCopy","push","todoId","find","splice","findIndex","triggerArrayCopy","indexOf","Footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29735382.chunk.js","sourcesContent":["const Header = () => {\n  return (\n    <header className=\"w-100 bg-danger text-white text-center py-2\">\n      <div className=\"container\">\n        <h2>Todo List</h2>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","const fetchData = (url) => {\n  return fetch(url)\n    .then((response) => response.json())\n    .then((data) => data)\n    .catch((error) => console.log(error));\n};\n\nexport default fetchData;\n","const Todos = ({\n  users,\n  todosList,\n  newTodo,\n  triggerArray,\n  setNewTodo,\n  addNewTodo,\n  toggleTodo,\n  deleteTodo,\n  mutateTriggerArray,\n}) => {\n  return users.map((user) => {\n    return (\n      <div className=\"py-4\" key={user.id}>\n        <h1\n          onClick={() => mutateTriggerArray(user.id)}\n          className=\"mb-1 text-danger name\"\n        >\n          {user.username}{' '}\n          <span className=\"fs-6 text-black opacity-50 fst-italic\">\n            {user.email}\n          </span>\n        </h1>\n        <div\n          style={{\n            display: !triggerArray.includes(user.id) ? 'none' : 'block',\n          }}\n        >\n          <div\n            className=\"bg-light my-2 p-2 fs-6 text-black\"\n          >\n            <p>\n              <span className=\"fw-bold\">Name: </span>\n              {user.name}\n            </p>\n            <p>\n              <span className=\"fw-bold\">Phone:</span> {user.phone}\n            </p>\n            <p>\n              <span className=\"fw-bold\">Website:</span> {user.website}\n            </p>\n            <p>\n              <span className=\"fw-bold\">Company:</span> {user.company.name}\n            </p>\n            <p>\n              <span className=\"fw-bold\">Address:</span> {user.address.street}{' '}\n              Street, {user.address.suite}, {user.address.city},{' '}\n              {user.address.zipcode}, {user.address.geo.lat},{' '}\n              {user.address.geo.lng}\n            </p>\n          </div>\n          <div\n            className=\"input-group pb-3\"\n          >\n            <input\n              type=\"text\"\n              placeholder=\"Add new todo\"\n              className=\"form-control\"\n              onChange={(e) => setNewTodo(e.target.value)}\n              value={newTodo === '' ? newTodo : null}\n            />\n            <button\n              onClick={() => addNewTodo(user.id)}\n              className=\"btn btn-outline-primary px-4\"\n            >\n              Add\n            </button>\n          </div>\n          <h4\n            style={{\n              display: !triggerArray.includes(user.id) ? 'none' : 'block',\n            }}\n            className=\"mb-3\"\n          >\n            <mark>\n              {\n                todosList.filter(\n                  (todo) => todo.userId === user.id && !todo.completed\n                ).length\n              }{' '}\n              Todos remaining{' '}\n            </mark>\n          </h4>\n          {todosList.map((todo) => {\n            if (todo.userId === user.id) {\n              return (\n                <div\n                  className=\"form-check border-bottom py-2 ms-0 ms-sm-3\"\n                  key={todo.id}\n                >\n                  <input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    defaultChecked={todo.completed}\n                    id={todo.id}\n                    onChange={() => toggleTodo(todo.id)}\n                  />\n                  <div className=\"position-relative\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"22\"\n                      height=\"28\"\n                      fill=\"currentColor\"\n                      className=\"bi bi-trash position-absolute\"\n                      viewBox=\"0 0 16 14\"\n                      onClick={() => deleteTodo(todo.id)}\n                    >\n                      <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\n                      />\n                    </svg>\n                    <label\n                      style={{\n                        paddingLeft: '2rem',\n                        textDecoration: todo.completed\n                          ? 'line-through'\n                          : 'none',\n                        color: todo.completed ? '#ccc' : '#000',\n                      }}\n                      htmlFor={todo.id}\n                      className=\"form-check-label\"\n                    >\n                      {todo.title}\n                    </label>\n                  </div>\n                </div>\n              );\n            }\n            return null; // return null if the userId doesn't match\n          })}\n        </div>\n      </div>\n    );\n  });\n};\n\nexport default Todos;\n","import { useState, useEffect } from 'react';\nimport fetchAPi from '../Utils/fetchApi'\nimport Todos from '../components/Todos';\n\nconst Main = () => {\n  const [newTodo, setNewTodo] = useState('');\n  const [users, setUsers] = useState([]);\n  const [todosList, setTodosList] = useState([]);\n  const [triggerArray, setTriggerArray] = useState([]);\n\n  useEffect(() => {\n    const usersURL = 'https://jsonplaceholder.typicode.com/users';\n    const todosURL = 'https://jsonplaceholder.typicode.com/todos';\n\n    fetchAPi(usersURL).then((data) => {\n      setUsers(data);\n    });\n    \n    fetchAPi(todosURL).then((data) => {\n      setTodosList(data);\n    });\n  })\n\n  const addNewTodo = (userId) => {\n    if (newTodo === '') return;\n\n    const todosCopy = [...todosList];\n    todosCopy.push({\n      userId: userId,\n      id: todosList.length + 1,\n      title: newTodo,\n      completed: false,\n    });\n    setTodosList(todosCopy);\n    setNewTodo('');\n  };\n\n  const toggleTodo = (todoId) => {\n    const todosCopy = [...todosList];\n    const todo = todosCopy.find((todo) => todo.id === todoId);\n    todo.completed = !todo.completed;\n    setTodosList(todosCopy);\n  };\n\n  const deleteTodo = (todoId) => {\n    const todosCopy = [...todosList];\n    todosCopy.splice(\n      todosCopy.findIndex((todo) => todo.id === todoId),\n      1\n    );\n    setTodosList(todosCopy);\n  };\n\n  const mutateTriggerArray = (userId) => {\n    const triggerArrayCopy = [...triggerArray];\n    if (triggerArrayCopy.includes(userId)) {\n      triggerArrayCopy.splice(triggerArrayCopy.indexOf(userId), 1);\n    } else {\n      triggerArrayCopy.push(userId);\n    }\n    setTriggerArray(triggerArrayCopy);\n  };\n\n  return (\n    <main className=\"w-100 py-5\">\n      <section className=\"container\">\n        <Todos\n          users={users}\n          todosList={todosList}\n          newTodo={newTodo}\n          triggerArray={triggerArray}\n          setNewTodo={setNewTodo}\n          addNewTodo={addNewTodo}\n          toggleTodo={toggleTodo}\n          deleteTodo={deleteTodo}\n          mutateTriggerArray={mutateTriggerArray}\n        />\n      </section>\n    </main>\n  );\n};\n\nexport default Main;\n","import React from 'react'\n\nconst Footer = () => {\n  return (\n    <footer className=\"bg-black py-4 w-100 text-white\">\n      <div className=\"container text-center\">\n        <h1>Footer</h1>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\n\nconst App = () => {\n  return (\n    <>\n      <Header />\n      <Main />\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n "],"sourceRoot":""}